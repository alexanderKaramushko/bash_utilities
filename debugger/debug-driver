#!/usr/bin/env bash

# NAME
#   debug-driver - служебный скрипт, который создает tmp-окружение и файлы для запуска дебаггинга

# SYNOPSIS 
#   debug-driver [file ...]

# OPTIONS
#   bp N            Установить точку остановы на N-строку
#   bp              Список всех точек остановы
#   bc string       Установить условие прерывания
#   bc              Удалить условие прерывания
#   cb N            Удалить точку остановы на N-строке
#   cb              Удалить все точки остановы
#   ds              Вывести оригинальный скрипт
#   g               Продолжить выполнение
#   s [N]           Пропустить N шагов
#   -trace          Включить дебаггинг фукнций и подоболочек
#   +trace          Выключить дебаггинг фукнций и подоболочек
#   h, ?            Помощь
#   q               Выйти из режима дебаггинга

debugger_name=${0##*/}

# Проверяем, был ли передан файл скрипта
if [[ $# -eq 0 ]]; then
  echo "$debugger_name: не передан скрипт для дебаггинга"
  exit 1
fi

script_or_command=$1
command_path=$(command -v "$script_or_command")
script_path=''

if [[ -z "$command_path" ]]; then
  # Проверяем, существует ли файл скрипта
  if [[ ! -e "$script_or_command" ]]; then
    echo "Файл скрипта $script_or_command не найден"
    exit 1
  fi

  # Проверяем, является ли переданный файл скрипта доступным для исполнения
  if [[ ! -x "$script_or_command" ]]; then
    echo "Файл скрипта $script_or_command не доступен для исполнения"
    exit 1
  fi

  script_path=$script_or_command
else
  # Проверяем, является ли переданный скрипт доступным для исполнения
  if [[ ! -x "$command_path" ]]; then
    echo "Скрипт $script_or_command не доступен для исполнения"
    exit 1
  fi

  script_path=$command_path
fi

# Удаляем аргумент файла скрипта из позиционных параметров
shift

# Системная tmp-директория
tmp='/tmp'

# Директория скрипта
lib='/usr/local/bin'

# tmp-файл дебаггера с PID процесса
debug_file="$tmp/debug$$"

# tmp-скрипт дебаггера с оригинальным скриптом
cat "$lib/debug-entry" "$script_path" > $debug_file

# Запускаем в bash-оболочке скрипт дебаггера и оригинальный скрипт
# "Убиваем" текущий процесс
# Передаем остальные позиционные параметры
exec bash $debug_file "$script_path" $tmp $lib "$@"
