#!/usr/bin/env bash

# NAME
#   debug-entry - установка входной точки для дебаггинга

# SYNOPSIS 
#   debug-entry [script tmp lib ...]

# DESCRIPTION 
#   debug-entry — это утилита командной строки, предназначенная для упрощения процесса отладки других скриптов.
#   Позволяет:
#   – указывать места в программе, в которых необходимо остановить выполнение (точки останова).
#   – Выполнять заданное количество операторов в программе (пошаговое выполнение).
#   – Проверять и изменять состояние программы во время её выполнения.
#     Это включает в себя возможность выводить значения переменных и изменять их при остановке программы
#     на точке останова или после пошагового выполнения.
#   – Выводить исходный код, прошедший отладку, вместе с указанием точек останова и текущей строки программы
#   – Предоставлять возможность отладки без необходимости каким-либо образом изменять исходный код отлаживаемой программы.

debugger_name=${0##*/}
original_script=$1
tmp_dir=$2
lib_dir=$3

# Удаляем аргументы дебаггера
shift 3

while getopts ":e" opt; do
  case $opt in
    e)
      break_on_stderr=1
      ;;
    \?)
      echo 'usage: debug-entry [-e]'
      exit 1
      ;;
  esac
done

# Импортируем функции дебаггига
source "$lib_dir/debug-fns"

lines=()
let skip=1
trace=1

while read; do
  # Записываем строки оригинального скрипта в массив
  # Это понадобится для установки точек остановы и логгирования комманд
  lines+=("$REPLY")
done < $original_script

trap 'cleanup "$tmp_dir/$debugger_name"' EXIT

let debug_lines_count=$(wc -l "$lib_dir/debug-entry" | grep -Eo '[0-9]+')

set -o functrace

# Точка входа в режим дебаггинга
trap 'enter_debug $(( $LINENO-1-$debug_lines_count )) $(maybe_read_stderr $?)' DEBUG
