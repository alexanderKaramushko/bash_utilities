#!/usr/bin/env bash

# NAME
#   debug - установка входной точки для дебаггинга

# SYNOPSIS 
#   debug [script tmp lib ...]

# DESCRIPTION 
#   debug — это утилита командной строки, предназначенная для упрощения процесса отладки других скриптов.
#   Позволяет:
#   – указывать места в программе, в которых необходимо остановить выполнение (точки останова).
#   – Выполнять заданное количество операторов в программе (пошаговое выполнение).
#   – Проверять и изменять состояние программы во время её выполнения.
#     Это включает в себя возможность выводить значения переменных и изменять их при остановке программы
#     на точке останова или после пошагового выполнения.
#   – Выводить исходный код, прошедший отладку, вместе с указанием точек останова и текущей строки программы
#   – Предоставлять возможность отладки без необходимости каким-либо образом изменять исходный код отлаживаемой программы.

#   Алгоритм:
#   – создать ловушку для EXIT-сигнала, по которой делать очистку /tmp
#   – запустить считывание строк из оригинального скрипта
#   – сохранять каждую строку в массив строк
#   – создать ловушку для DEBUG-сигнала, на которой будет происходить вход в скрипт
#     c передачей номера интерпретируемой строки

# OPTIONS
#   -h, --help отображает это руководство и выходит.
#   bp N установить точку остановы на строку N.

debugger_name=${0##*/}
original_script=$1
tmp_dir=$2
lib_dir=$3

# Удаляем аргументы дебаггера
shift 3

# Импортируем функции дебаггига
source "$lib_dir/debug-fns"

lines=()

while read; do
  # Записываем строки оригинального скрипта в массив
  # Это понадобится для установки точек остановы и логгирования комманд
  lines+=("$REPLY")
done < $original_script

trap 'cleanup "$tmp_dir/$debugger_name"' EXIT

# Точка входа в режим дебаггинга
trap 'step_into $(( $LINENO-46 ))' DEBUG
